{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "#                                    WORD EMBENDING USING WORD2VEC"
      ],
      "metadata": {
        "id": "CpXvgrq48zb2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import ast\n",
        "from gensim.models import Word2Vec\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.decomposition import PCA\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Step 1: Load the CSV data\n",
        "df = pd.read_csv('/content/drive/MyDrive/data/dataset.csv')   # replace with the path to the csv file\n"
      ],
      "metadata": {
        "id": "TA-EmZ7w80IR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 2: Convert 'description_tokens' from string to list if necessary\n",
        "## If 'description_tokens' column is a string, convert it to list of tokens"
      ],
      "metadata": {
        "id": "mmiAEjktM7H4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "df['description_tokens'] = df['description_tokens'].apply(ast.literal_eval)"
      ],
      "metadata": {
        "id": "xR05nDyp81LM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 3: Extract the tokenized descriptions (list of words for each job description)"
      ],
      "metadata": {
        "id": "dkaC50pxNGcq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "descriptions = df['description_tokens'].tolist()\n"
      ],
      "metadata": {
        "id": "iJQ793Kf89Mt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 4: Train the Word2Vec model using the tokenized descriptions\n",
        "## Use vector_size=100 for word vectors of 100 dimensions"
      ],
      "metadata": {
        "id": "UtgvPVG8NT0M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "model = Word2Vec(sentences=descriptions, vector_size=100, window=5, min_count=1, workers=4)"
      ],
      "metadata": {
        "id": "XbyhskHQ8_YI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 5: Explore relationships - Find related skills to a specific skill (e.g., 'python')"
      ],
      "metadata": {
        "id": "bVhuPNFMNY47"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# related_skills = model.wv.most_similar('r', topn=10)\n",
        "# print(\"Top 10 skills related to 'r':\", related_skills)\n",
        "# Get all the skills (words) in the model's vocabulary\n",
        "all_skills = list(model.wv.index_to_key)\n",
        "\n",
        "# Create a dictionary to store the most similar skills for each skill\n",
        "similar_skills_dict = {}\n",
        "\n",
        "# Iterate over each skill and find the most similar skills\n",
        "for skill in all_skills:\n",
        "    similar_skills = model.wv.most_similar(skill, topn=5)  # Get top 10 most similar skills\n",
        "    similar_skills_dict[skill] = similar_skills\n",
        "\n",
        "# Print the similar skills for each skill\n",
        "for skill, similar in similar_skills_dict.items():\n",
        "    print(f\"Top 5 skills similar to '{skill}': {similar}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8dELWM3U9Cs4",
        "outputId": "e793dfa0-f662-4e88-f41a-1d800b82ef41"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Top 5 skills similar to 'sql': [('qlik', 0.581529974937439), ('nuix', 0.5732392072677612), ('rshiny', 0.565555214881897), ('azure', 0.5641366243362427), ('clojure', 0.5531286001205444)]\n",
            "Top 5 skills similar to 'excel': [('cognos', 0.7026734352111816), ('swift', 0.6842235326766968), ('visual_basic', 0.6673924922943115), ('spreadsheet', 0.6630973815917969), ('assembly', 0.6511794328689575)]\n",
            "Top 5 skills similar to 'python': [('mxnet', 0.6237805485725403), ('javascript/typescript', 0.6087234020233154), ('julia', 0.5974769592285156), ('selenium', 0.5953430533409119), ('tensorflow', 0.5714500546455383)]\n",
            "Top 5 skills similar to 'power_bi': [('sas', 0.6751061677932739), ('nuix', 0.6672977209091187), ('vba', 0.6192433834075928), ('alteryx', 0.5806999802589417), ('cognos', 0.5510523915290833)]\n",
            "Top 5 skills similar to 'tableau': [('sap', 0.6595451831817627), ('nuix', 0.5805560350418091), ('apl', 0.5643846988677979), ('gdpr', 0.5577852725982666), ('twilio', 0.5491903424263)]\n",
            "Top 5 skills similar to 'r': [('nosql', 0.6858842968940735), ('nuix', 0.6054484844207764), ('spark', 0.5445566773414612), ('matplotlib', 0.5322185158729553), ('vba', 0.5239437222480774)]\n",
            "Top 5 skills similar to 'sas': [('vba', 0.7457731366157532), ('spss', 0.6779733300209045), ('power_bi', 0.6751061677932739), ('nuix', 0.6375647783279419), ('spreadsheet', 0.601848304271698)]\n",
            "Top 5 skills similar to 'powerpoint': [('spreadsheet', 0.8949589729309082), ('outlook', 0.8898004293441772), ('visio', 0.8710323572158813), ('visual_basic', 0.8488980531692505), ('cognos', 0.8160587549209595)]\n",
            "Top 5 skills similar to 'word': [('sharepoint', 0.7765021920204163), ('visual_basic', 0.7592573165893555), ('swift', 0.7532599568367004), ('spreadsheet', 0.7376654148101807), ('assembly', 0.702815592288971)]\n",
            "Top 5 skills similar to 'azure': [('git', 0.8094044923782349), ('bitbucket', 0.7627213597297668), ('mongo', 0.7557713985443115), ('no-sql', 0.7552101612091064), ('redis', 0.7395117878913879)]\n",
            "Top 5 skills similar to 'aws': [('airflow', 0.9025450944900513), ('postgres', 0.9015846848487854), ('pyspark', 0.8661625385284424), ('mongodb', 0.8423063158988953), ('gcp', 0.8165673017501831)]\n",
            "Top 5 skills similar to 'snowflake': [('redshift', 0.8546062111854553), ('airflow', 0.8509222269058228), ('no-sql', 0.8375254273414612), ('gcp', 0.8372452259063721), ('aurora', 0.8362317085266113)]\n",
            "Top 5 skills similar to 'spark': [('gcp', 0.7880505323410034), ('bigquery', 0.7807260155677795), ('nosql', 0.7645860314369202), ('tensorflow', 0.6979140043258667), ('matplotlib', 0.6905942559242249)]\n",
            "Top 5 skills similar to 'looker': [('gcp', 0.8389114737510681), ('bigquery', 0.8371385931968689), ('redshift', 0.8174871206283569), ('snowflake', 0.7801874279975891), ('airflow', 0.773979902267456)]\n",
            "Top 5 skills similar to 'go': [('theano', 0.9482106566429138), ('datarobot', 0.929801344871521), ('powerpoints', 0.9289081692695618), ('graphql', 0.9238472580909729), ('ubuntu', 0.9174532890319824)]\n",
            "Top 5 skills similar to 'scala': [('nosql', 0.7451527714729309), ('gcp', 0.674453616142273), ('bigquery', 0.6661632657051086), ('looker', 0.6002981066703796), ('hadoop', 0.5781556963920593)]\n",
            "Top 5 skills similar to 'spreadsheet': [('visual_basic', 0.9282233715057373), ('powerpoint', 0.894959032535553), ('outlook', 0.8699632883071899), ('assembly', 0.8602425456047058), ('swift', 0.8333914875984192)]\n",
            "Top 5 skills similar to 'sap': [('swift', 0.9095055460929871), ('cognos', 0.843041181564331), ('terminal', 0.8373938798904419), ('elixir', 0.8370561003684998), ('gdpr', 0.8358659148216248)]\n",
            "Top 5 skills similar to 'jira': [('atlassian', 0.8164286017417908), ('aurora', 0.8153111338615417), ('gdpr', 0.8099378943443298), ('bitbucket', 0.7896457314491272), ('clojure', 0.7743443250656128)]\n",
            "Top 5 skills similar to 'spss': [('vba', 0.8260024189949036), ('spreadsheet', 0.7118149399757385), ('sas', 0.6779733300209045), ('visual_basic', 0.6763676404953003), ('swift', 0.5993244647979736)]\n",
            "Top 5 skills similar to 'c': [('php', 0.9412797689437866), ('jquery', 0.9080936908721924), ('c/c++', 0.8972845673561096), ('css', 0.8952534198760986), ('perl', 0.890209436416626)]\n",
            "Top 5 skills similar to 'java': [('ruby', 0.8272021412849426), ('perl', 0.8000361919403076), ('javascript', 0.7930099368095398), ('unix/linux', 0.7787843942642212), ('c++', 0.7730498909950256)]\n",
            "Top 5 skills similar to 'alteryx': [('cognos', 0.8056615591049194), ('qlik', 0.7906099557876587), ('terminal', 0.7860787510871887), ('elixir', 0.778188943862915), ('gdpr', 0.7293874025344849)]\n",
            "Top 5 skills similar to 'hadoop': [('mongodb', 0.8805028200149536), ('unix/linux', 0.8429098129272461), ('selenium', 0.8325814604759216), ('no-sql', 0.8047012090682983), ('postgres', 0.7937692403793335)]\n",
            "Top 5 skills similar to 'nosql': [('spark', 0.7645860314369202), ('gcp', 0.7526179552078247), ('scala', 0.7451527714729309), ('bigquery', 0.6958428025245667), ('r', 0.6858841180801392)]\n",
            "Top 5 skills similar to 'outlook': [('visio', 0.8902982473373413), ('powerpoint', 0.8898003697395325), ('spreadsheet', 0.8699632883071899), ('visual_basic', 0.8230012655258179), ('sharepoint', 0.7947590351104736)]\n",
            "Top 5 skills similar to 'sharepoint': [('visio', 0.9245819449424744), ('crystal', 0.8753807544708252), ('visual_basic', 0.86957186460495), ('cognos', 0.7952122688293457), ('outlook', 0.7947590947151184)]\n",
            "Top 5 skills similar to 'vba': [('spss', 0.8260024189949036), ('visual_basic', 0.8025340437889099), ('spreadsheet', 0.7770668268203735), ('sas', 0.7457731366157532), ('cognos', 0.7242770791053772)]\n",
            "Top 5 skills similar to 'gcp': [('airflow', 0.9157373905181885), ('bigquery', 0.8922439217567444), ('redshift', 0.8680122494697571), ('looker', 0.8389114737510681), ('snowflake', 0.8372452855110168)]\n",
            "Top 5 skills similar to 'javascript': [('css', 0.880416750907898), ('php', 0.8400008082389832), ('ruby', 0.8380394577980042), ('c', 0.815655529499054), ('perl', 0.807075023651123)]\n",
            "Top 5 skills similar to 'bigquery': [('gcp', 0.8922438621520996), ('airflow', 0.8667512536048889), ('redshift', 0.8485642075538635), ('looker', 0.8371386528015137), ('postgres', 0.8208374977111816)]\n",
            "Top 5 skills similar to 'qlik': [('gdpr', 0.8835203647613525), ('elixir', 0.8516194224357605), ('terminal', 0.8435677289962769), ('atlassian', 0.834619402885437), ('cobol', 0.8230607509613037)]\n",
            "Top 5 skills similar to 'redshift': [('airflow', 0.9538317322731018), ('postgres', 0.915593683719635), ('gcp', 0.8680122494697571), ('snowflake', 0.8546062111854553), ('bigquery', 0.848564088344574)]\n",
            "Top 5 skills similar to 'ssrs': [('dax', 0.9120244383811951), ('t-sql', 0.8863890767097473), ('crystal', 0.860924243927002), ('ssis', 0.8227126598358154), ('asp.net', 0.7658684253692627)]\n",
            "Top 5 skills similar to 'ssis': [('t-sql', 0.9010981321334839), ('dax', 0.8706948757171631), ('powershell', 0.8407554030418396), ('ssrs', 0.8227126598358154), ('crystal', 0.7875832319259644)]\n",
            "Top 5 skills similar to 'microstrategy': [('sap', 0.7045915126800537), ('swift', 0.6658494472503662), ('cognos', 0.6336001753807068), ('gdpr', 0.632826030254364), ('qlik', 0.6287953853607178)]\n",
            "Top 5 skills similar to 'pandas': [('scikit-learn', 0.8654203414916992), ('ggplot2', 0.8496766090393066), ('seaborn', 0.8218047618865967), ('plotly', 0.8130342364311218), ('jupyter', 0.8111681938171387)]\n",
            "Top 5 skills similar to 'git': [('docker', 0.9117441773414612), ('gitlab', 0.9068079590797424), ('mongodb', 0.8887860178947449), ('bash', 0.8800398111343384), ('pyspark', 0.8719027042388916)]\n",
            "Top 5 skills similar to 'mysql': [('aurora', 0.8881136775016785), ('mongo', 0.8674926161766052), ('mssql', 0.8495298624038696), ('bitbucket', 0.8475189805030823), ('postgres', 0.8301519751548767)]\n",
            "Top 5 skills similar to 'dax': [('ssrs', 0.9120244383811951), ('ssis', 0.8706948757171631), ('crystal', 0.8499969244003296), ('t-sql', 0.8450629711151123), ('asp.net', 0.7608766555786133)]\n",
            "Top 5 skills similar to 'matplotlib': [('seaborn', 0.7220250368118286), ('plotly', 0.7171064615249634), ('tensorflow', 0.7156336903572083), ('keras', 0.7015621066093445), ('spark', 0.6905941367149353)]\n",
            "Top 5 skills similar to 'visio': [('sharepoint', 0.9245818257331848), ('outlook', 0.8902981877326965), ('powerpoint', 0.8710324168205261), ('visual_basic', 0.8571690320968628), ('spreadsheet', 0.8199670910835266)]\n",
            "Top 5 skills similar to 'cognos': [('sap', 0.8430412411689758), ('crystal', 0.8405303955078125), ('swift', 0.8215774297714233), ('powerpoint', 0.8160586953163147), ('visual_basic', 0.8146072626113892)]\n",
            "Top 5 skills similar to 'tensorflow': [('keras', 0.9127512574195862), ('pytorch', 0.857158362865448), ('plotly', 0.8275802731513977), ('pyspark', 0.8095966577529907), ('seaborn', 0.8002793192863464)]\n",
            "Top 5 skills similar to 'pyspark': [('plotly', 0.8843600153923035), ('jupyter', 0.8821009397506714), ('pytorch', 0.8785202503204346), ('keras', 0.8736897706985474), ('airflow', 0.8721181154251099)]\n",
            "Top 5 skills similar to 'airflow': [('redshift', 0.9538316130638123), ('postgres', 0.9337726831436157), ('gcp', 0.9157373309135437), ('aws', 0.9025450944900513), ('pyspark', 0.8721179962158203)]\n",
            "Top 5 skills similar to 'numpy': [('ggplot2', 0.8925130367279053), ('scikit-learn', 0.8923127055168152), ('jupyter', 0.8880533576011658), ('seaborn', 0.8635470271110535), ('plotly', 0.8315973877906799)]\n",
            "Top 5 skills similar to 't-sql': [('ssis', 0.9010981917381287), ('ssrs', 0.8863890171051025), ('powershell', 0.8461577296257019), ('dax', 0.8450630307197571), ('crystal', 0.8402940630912781)]\n",
            "Top 5 skills similar to 'matlab': [('julia', 0.7234804630279541), ('rshiny', 0.6778465509414673), ('mxnet', 0.6690157055854797), ('nltk', 0.6539162397384644), ('c/c++', 0.653608500957489)]\n",
            "Top 5 skills similar to 'postgresql': [('github', 0.9116941690444946), ('postgres', 0.9078538417816162), ('bitbucket', 0.9057645201683044), ('bash', 0.8959697484970093), ('gitlab', 0.8942679762840271)]\n",
            "Top 5 skills similar to 'pl/sql': [('mssql', 0.8368808031082153), ('asp.net', 0.7325102090835571), ('cobol', 0.7256165146827698), ('vb.net', 0.7110328078269958), ('crystal', 0.7001236081123352)]\n",
            "Top 5 skills similar to 'github': [('gitlab', 0.9299512505531311), ('postgresql', 0.9116941690444946), ('bitbucket', 0.905409038066864), ('splunk', 0.8961474895477295), ('bash', 0.8772976398468018)]\n",
            "Top 5 skills similar to 'c++': [('ruby', 0.8444404602050781), ('perl', 0.8114469051361084), ('java', 0.7730498313903809), ('php', 0.7378355264663696), ('javascript', 0.726871132850647)]\n",
            "Top 5 skills similar to 'html': [('css', 0.9101371169090271), ('c', 0.8768725395202637), ('jquery', 0.8694652318954468), ('php', 0.8693674802780151), ('c/c++', 0.8405046463012695)]\n",
            "Top 5 skills similar to 'linux': [('shell', 0.9443111419677734), ('bash', 0.9356696605682373), ('unix', 0.8844394683837891), ('splunk', 0.8792327642440796), ('docker', 0.8657875657081604)]\n",
            "Top 5 skills similar to 'crystal': [('sharepoint', 0.8753805756568909), ('ssrs', 0.8609241843223572), ('visual_basic', 0.85458904504776), ('dax', 0.8499969244003296), ('asp.net', 0.8443977236747742)]\n",
            "Top 5 skills similar to 'scikit-learn': [('ggplot2', 0.9612787365913391), ('seaborn', 0.9472534656524658), ('jupyter', 0.9418349266052246), ('plotly', 0.9361839294433594), ('keras', 0.9081928133964539)]\n",
            "Top 5 skills similar to 'docker': [('mongodb', 0.9337611198425293), ('git', 0.9117441177368164), ('gitlab', 0.8722734451293945), ('bash', 0.8709998726844788), ('linux', 0.8657875657081604)]\n",
            "Top 5 skills similar to 'pytorch': [('keras', 0.9808157682418823), ('plotly', 0.9515697360038757), ('seaborn', 0.9216713905334473), ('jupyter', 0.904071569442749), ('scikit-learn', 0.8809217214584351)]\n",
            "Top 5 skills similar to 'postgres': [('airflow', 0.9337727427482605), ('mongodb', 0.9291293025016785), ('redshift', 0.9155936241149902), ('postgresql', 0.9078538417816162), ('aws', 0.9015847444534302)]\n",
            "Top 5 skills similar to 'unix': [('perl', 0.9357534050941467), ('shell', 0.924025297164917), ('splunk', 0.9074996709823608), ('bash', 0.8919281363487244), ('linux', 0.8844394683837891)]\n",
            "Top 5 skills similar to 'shell': [('linux', 0.9443110227584839), ('bash', 0.9380666017532349), ('splunk', 0.9242169260978699), ('unix', 0.9240254163742065), ('perl', 0.8829987049102783)]\n",
            "Top 5 skills similar to 'jupyter': [('plotly', 0.9605535268783569), ('seaborn', 0.9564922451972961), ('scikit-learn', 0.9418348670005798), ('ggplot2', 0.9334022998809814), ('keras', 0.9136806130409241)]\n",
            "Top 5 skills similar to 'powershell': [('t-sql', 0.8461577296257019), ('ssis', 0.8407554030418396), ('vb.net', 0.8375629186630249), ('mongo', 0.8321859240531921), ('mssql', 0.821871280670166)]\n",
            "Top 5 skills similar to 'visual_basic': [('spreadsheet', 0.9282232522964478), ('sharepoint', 0.8695718050003052), ('assembly', 0.8619601130485535), ('visio', 0.8571690320968628), ('crystal', 0.8545889854431152)]\n",
            "Top 5 skills similar to 'mongodb': [('docker', 0.9337610602378845), ('postgres', 0.9291293025016785), ('bash', 0.9028588533401489), ('selenium', 0.8984637260437012), ('unix/linux', 0.8980610370635986)]\n",
            "Top 5 skills similar to 'css': [('jquery', 0.9253993630409241), ('php', 0.9118134379386902), ('html', 0.9101370573043823), ('c', 0.8952533006668091), ('javascript', 0.880416750907898)]\n",
            "Top 5 skills similar to 'splunk': [('bash', 0.9546239972114563), ('linux/unix', 0.9524569511413574), ('js', 0.9447540044784546), ('node.js', 0.94427090883255), ('bitbucket', 0.9352632164955139)]\n",
            "Top 5 skills similar to 'gdpr': [('ubuntu', 0.9601449966430664), ('clojure', 0.9545885920524597), ('elixir', 0.9498350620269775), ('datarobot', 0.9425429701805115), ('apl', 0.9343222379684448)]\n",
            "Top 5 skills similar to 'swift': [('sap', 0.9095056653022766), ('visual_basic', 0.8375433683395386), ('assembly', 0.8367677927017212), ('spreadsheet', 0.8333914279937744), ('cognos', 0.8215774297714233)]\n",
            "Top 5 skills similar to 'plotly': [('seaborn', 0.9866101145744324), ('jupyter', 0.9605535268783569), ('keras', 0.9589946269989014), ('pytorch', 0.951569676399231), ('scikit-learn', 0.9361838698387146)]\n",
            "Top 5 skills similar to 'mssql': [('vb.net', 0.8506410121917725), ('mysql', 0.8495298624038696), ('mongo', 0.8449382781982422), ('aurora', 0.8418897390365601), ('clojure', 0.8408722281455994)]\n",
            "Top 5 skills similar to 'keras': [('pytorch', 0.9808157682418823), ('plotly', 0.9589946269989014), ('seaborn', 0.9372079968452454), ('jupyter', 0.9136806130409241), ('tensorflow', 0.9127512574195862)]\n",
            "Top 5 skills similar to 'perl': [('ruby', 0.948049783706665), ('php', 0.9436490535736084), ('unix', 0.935753345489502), ('js', 0.9190286993980408), ('c/c++', 0.9088841676712036)]\n",
            "Top 5 skills similar to 'seaborn': [('plotly', 0.9866100549697876), ('jupyter', 0.9564921259880066), ('scikit-learn', 0.9472534656524658), ('ggplot2', 0.9456642866134644), ('keras', 0.9372080564498901)]\n",
            "Top 5 skills similar to 'assembly': [('terminal', 0.9402088522911072), ('apl', 0.9365450739860535), ('fortran', 0.9323745369911194), ('elixir', 0.9229209423065186), ('dart', 0.9115996956825256)]\n",
            "Top 5 skills similar to 'bash': [('splunk', 0.9546239972114563), ('shell', 0.9380663633346558), ('linux', 0.9356696605682373), ('linux/unix', 0.9332893490791321), ('bitbucket', 0.9263750910758972)]\n",
            "Top 5 skills similar to 'gitlab': [('bitbucket', 0.9514557123184204), ('github', 0.9299513101577759), ('bash', 0.9189266562461853), ('redis', 0.917272686958313), ('git', 0.9068080186843872)]\n",
            "Top 5 skills similar to 'php': [('c/c++', 0.9715580940246582), ('jquery', 0.9690089821815491), ('js', 0.9599337577819824), ('perl', 0.9436491131782532), ('c', 0.9412797689437866)]\n",
            "Top 5 skills similar to 'atlassian': [('aurora', 0.9328483939170837), ('gdpr', 0.9301533102989197), ('bitbucket', 0.9099155068397522), ('ubuntu', 0.8992226123809814), ('clojure', 0.8842234015464783)]\n",
            "Top 5 skills similar to 'terminal': [('elixir', 0.9732280969619751), ('cobol', 0.956079363822937), ('apl', 0.9410104751586914), ('assembly', 0.9402088522911072), ('asp.net', 0.9343456625938416)]\n",
            "Top 5 skills similar to 'ruby': [('perl', 0.9480498433113098), ('php', 0.9293283224105835), ('js', 0.9234293699264526), ('node.js', 0.9216429591178894), ('groovy', 0.9158926606178284)]\n",
            "Top 5 skills similar to 'aurora': [('bitbucket', 0.9657225012779236), ('redis', 0.9639036655426025), ('mongo', 0.9529787302017212), ('clojure', 0.9505106806755066), ('ubuntu', 0.9452464580535889)]\n",
            "Top 5 skills similar to 'selenium': [('unix/linux', 0.9817305207252502), ('typescript', 0.9663571119308472), ('golang', 0.9620356559753418), ('julia', 0.9583401679992676), ('node.js', 0.9563824534416199)]\n",
            "Top 5 skills similar to 'ggplot2': [('scikit-learn', 0.9612786769866943), ('seaborn', 0.9456642270088196), ('jupyter', 0.9334022402763367), ('plotly', 0.9183245301246643), ('dplyr', 0.9150941967964172)]\n",
            "Top 5 skills similar to 'bitbucket': [('aurora', 0.9657225608825684), ('redis', 0.9652481079101562), ('gitlab', 0.9514556527137756), ('linux/unix', 0.9483731985092163), ('mongo', 0.9389019012451172)]\n",
            "Top 5 skills similar to 'unix/linux': [('selenium', 0.9817305207252502), ('typescript', 0.9718016386032104), ('golang', 0.9678760766983032), ('node.js', 0.9607371687889099), ('julia', 0.9476115703582764)]\n",
            "Top 5 skills similar to 'mongo': [('linux/unix', 0.9782097935676575), ('redis', 0.9689114689826965), ('aurora', 0.9529786705970764), ('no-sql', 0.9518341422080994), ('clojure', 0.9506562948226929)]\n",
            "Top 5 skills similar to 'no-sql': [('redis', 0.9727205038070679), ('golang', 0.9632397294044495), ('typescript', 0.9579914212226868), ('mongo', 0.9518342018127441), ('kotlin', 0.9447230696678162)]\n",
            "Top 5 skills similar to 'js': [('vue', 0.9704886674880981), ('rust', 0.9637031555175781), ('groovy', 0.959973156452179), ('php', 0.9599336385726929), ('linux/unix', 0.9585444927215576)]\n",
            "Top 5 skills similar to 'jquery': [('php', 0.9690088033676147), ('c/c++', 0.9588239789009094), ('js', 0.9451085329055786), ('dart', 0.9429570436477661), ('vue', 0.9406319856643677)]\n",
            "Top 5 skills similar to 'c/c++': [('php', 0.9715579748153687), ('jquery', 0.9588240385055542), ('rust', 0.9512550234794617), ('dart', 0.9457913041114807), ('vue', 0.9342116713523865)]\n",
            "Top 5 skills similar to 'linux/unix': [('groovy', 0.9847211241722107), ('mongo', 0.9782097339630127), ('node.js', 0.9771836400032043), ('node', 0.9744236469268799), ('redis', 0.9729177355766296)]\n",
            "Top 5 skills similar to 'typescript': [('golang', 0.9887118339538574), ('redis', 0.9808364510536194), ('node.js', 0.973898708820343), ('unix/linux', 0.9718016386032104), ('linux/unix', 0.9696947336196899)]\n",
            "Top 5 skills similar to 'julia': [('rshiny', 0.9718304872512817), ('mxnet', 0.9689289927482605), ('solidity', 0.9604758024215698), ('selenium', 0.958340048789978), ('graphql', 0.9521161317825317)]\n",
            "Top 5 skills similar to 'rshiny': [('solidity', 0.9848068952560425), ('graphql', 0.9746212363243103), ('julia', 0.9718306064605713), ('twilio', 0.9712356328964233), ('mxnet', 0.9591805934906006)]\n",
            "Top 5 skills similar to 'node.js': [('groovy', 0.9845395684242249), ('golang', 0.9839369058609009), ('linux/unix', 0.9771836400032043), ('typescript', 0.9738986492156982), ('node', 0.9659218192100525)]\n",
            "Top 5 skills similar to 'cobol': [('asp.net', 0.9805010557174683), ('elixir', 0.978658139705658), ('vb.net', 0.9740682244300842), ('terminal', 0.956079363822937), ('dart', 0.9524615406990051)]\n",
            "Top 5 skills similar to 'asp.net': [('cobol', 0.9805009961128235), ('vb.net', 0.9708385467529297), ('elixir', 0.9443937540054321), ('terminal', 0.934345543384552), ('dart', 0.9267258644104004)]\n",
            "Top 5 skills similar to 'nltk': [('dplyr', 0.9858516454696655), ('mxnet', 0.9765136241912842), ('solidity', 0.9519192576408386), ('rshiny', 0.9333269596099854), ('julia', 0.929873526096344)]\n",
            "Top 5 skills similar to 'node': [('vue', 0.9855974912643433), ('groovy', 0.9855803847312927), ('ubuntu', 0.9843683838844299), ('graphql', 0.9834418296813965), ('kotlin', 0.983260989189148)]\n",
            "Top 5 skills similar to 'groovy': [('node', 0.9855805039405823), ('linux/unix', 0.9847211837768555), ('node.js', 0.9845397472381592), ('golang', 0.9828091859817505), ('rust', 0.9740464687347412)]\n",
            "Top 5 skills similar to 'redis': [('golang', 0.9820725321769714), ('typescript', 0.9808364510536194), ('linux/unix', 0.9729177951812744), ('no-sql', 0.9727204442024231), ('mongo', 0.9689115285873413)]\n",
            "Top 5 skills similar to 'graphql': [('kotlin', 0.9848141670227051), ('node', 0.9834420084953308), ('twilio', 0.9768726825714111), ('solidity', 0.9759008884429932), ('ubuntu', 0.9756971001625061)]\n",
            "Top 5 skills similar to 'golang': [('typescript', 0.9887116551399231), ('node.js', 0.9839367866516113), ('groovy', 0.9828091263771057), ('redis', 0.9820725321769714), ('node', 0.9767541289329529)]\n",
            "Top 5 skills similar to 'nuix': [('twilio', 0.9528830647468567), ('apl', 0.9505842328071594), ('rshiny', 0.933201014995575), ('solidity', 0.9324427843093872), ('fortran', 0.9314276576042175)]\n",
            "Top 5 skills similar to 'rust': [('vue', 0.9919130206108093), ('dart', 0.9884462356567383), ('node', 0.9806178212165833), ('groovy', 0.9740464687347412), ('fortran', 0.9681391716003418)]\n",
            "Top 5 skills similar to 'vb.net': [('cobol', 0.9740682244300842), ('asp.net', 0.9708385467529297), ('vue', 0.9566072821617126), ('dart', 0.9542300701141357), ('node', 0.9501795768737793)]\n",
            "Top 5 skills similar to 'dplyr': [('nltk', 0.9858515858650208), ('mxnet', 0.9585896134376526), ('solidity', 0.9506082534790039), ('rshiny', 0.941023051738739), ('tidyr', 0.9240126609802246)]\n",
            "Top 5 skills similar to 'vue': [('rust', 0.9919131994247437), ('dart', 0.9883674383163452), ('node', 0.9855974912643433), ('js', 0.9704886674880981), ('groovy', 0.9701247215270996)]\n",
            "Top 5 skills similar to 'twilio': [('solidity', 0.9817648530006409), ('datarobot', 0.9811816811561584), ('powerpoints', 0.9780434966087341), ('graphql', 0.9768726825714111), ('apl', 0.9752007722854614)]\n",
            "Top 5 skills similar to 'solidity': [('rshiny', 0.9848067760467529), ('twilio', 0.9817647337913513), ('graphql', 0.9759007692337036), ('mxnet', 0.9755427837371826), ('julia', 0.960475742816925)]\n",
            "Top 5 skills similar to 'datarobot': [('twilio', 0.9811815619468689), ('ubuntu', 0.9753791689872742), ('powerpoints', 0.9703235626220703), ('apl', 0.9689227342605591), ('fortran', 0.9677233099937439)]\n",
            "Top 5 skills similar to 'mxnet': [('nltk', 0.9765135049819946), ('solidity', 0.9755429029464722), ('julia', 0.9689289927482605), ('rshiny', 0.9591805934906006), ('dplyr', 0.9585896730422974)]\n",
            "Top 5 skills similar to 'dart': [('rust', 0.9884461760520935), ('vue', 0.9883675575256348), ('fortran', 0.9724364876747131), ('node', 0.9712026119232178), ('vb.net', 0.9542301297187805)]\n",
            "Top 5 skills similar to 'fortran': [('apl', 0.9865741729736328), ('dart', 0.9724363684654236), ('twilio', 0.9709351062774658), ('graphql', 0.9696863889694214), ('rust', 0.968139111995697)]\n",
            "Top 5 skills similar to 'apl': [('fortran', 0.9865742325782776), ('twilio', 0.9752007722854614), ('elixir', 0.9747267365455627), ('datarobot', 0.9689228534698486), ('powerpoints', 0.9598670601844788)]\n",
            "Top 5 skills similar to 'powerpoints': [('twilio', 0.9780434370040894), ('datarobot', 0.9703236818313599), ('ubuntu', 0.9642996788024902), ('graphql', 0.9636030793190002), ('apl', 0.9598670601844788)]\n",
            "Top 5 skills similar to 'clojure': [('ubuntu', 0.9763860106468201), ('node', 0.9721177220344543), ('vue.js', 0.962041974067688), ('vue', 0.9590649604797363), ('golang', 0.9552902579307556)]\n",
            "Top 5 skills similar to 'theano': [('go', 0.9482107162475586), ('graphql', 0.9479187726974487), ('solidity', 0.94281005859375), ('fortran', 0.9425559639930725), ('datarobot', 0.9333581924438477)]\n",
            "Top 5 skills similar to 'ubuntu': [('node', 0.9843685030937195), ('clojure', 0.9763860702514648), ('graphql', 0.9756969809532166), ('datarobot', 0.9753792881965637), ('vue.js', 0.9741735458374023)]\n",
            "Top 5 skills similar to 'elixir': [('cobol', 0.978658139705658), ('apl', 0.9747267365455627), ('terminal', 0.9732280969619751), ('fortran', 0.9624293446540833), ('datarobot', 0.9538791179656982)]\n",
            "Top 5 skills similar to 'mlr': [('gdpr', 0.8853498101234436), ('clojure', 0.878220796585083), ('ubuntu', 0.8684892058372498), ('elixir', 0.8569377064704895), ('cobol', 0.8554435968399048)]\n",
            "Top 5 skills similar to 'kotlin': [('graphql', 0.9848142862319946), ('node', 0.9832610487937927), ('golang', 0.9751369953155518), ('groovy', 0.9716794490814209), ('ubuntu', 0.9716232419013977)]\n",
            "Top 5 skills similar to 'vue.js': [('node', 0.9764056205749512), ('ubuntu', 0.9741734266281128), ('golang', 0.9698706269264221), ('graphql', 0.9685584306716919), ('kotlin', 0.9663052558898926)]\n",
            "Top 5 skills similar to 'erlang': [('assembly', 0.8734827637672424), ('terminal', 0.8652641773223877), ('elixir', 0.8337484002113342), ('visual_basic', 0.8297016620635986), ('spreadsheet', 0.8264267444610596)]\n",
            "Top 5 skills similar to 'objective-c': [('node', 0.9563907980918884), ('rust', 0.9546232223510742), ('vue', 0.9530701637268066), ('groovy', 0.944681704044342), ('ubuntu', 0.9425670504570007)]\n",
            "Top 5 skills similar to 'haskell': [('selenium', 0.791364848613739), ('no-sql', 0.784937858581543), ('unix/linux', 0.7725049257278442), ('golang', 0.7609172463417053), ('typescript', 0.7578768730163574)]\n",
            "Top 5 skills similar to 'javascript/typescript': [('solidity', 0.9353514909744263), ('golang', 0.9332796931266785), ('redis', 0.928030252456665), ('no-sql', 0.9268580675125122), ('graphql', 0.9267631769180298)]\n",
            "Top 5 skills similar to 'sass': [('cobol', 0.905022382736206), ('terminal', 0.8987178206443787), ('elixir', 0.8982482552528381), ('apl', 0.8953696489334106), ('fortran', 0.8927726149559021)]\n",
            "Top 5 skills similar to 'tidyr': [('dplyr', 0.9240126013755798), ('nltk', 0.9200600981712341), ('mxnet', 0.88877272605896), ('ggplot2', 0.8760245442390442), ('solidity', 0.8732200264930725)]\n",
            "Top 5 skills similar to 'mlpack': [('theano', 0.5272981524467468), ('dplyr', 0.5121762752532959), ('nltk', 0.5120435953140259), ('gitlab', 0.5043009519577026), ('atlassian', 0.5014764666557312)]\n",
            "Top 5 skills similar to 'delphi': [('twilio', 0.8803669214248657), ('ubuntu', 0.8641575574874878), ('nuix', 0.8622872829437256), ('datarobot', 0.8595693111419678), ('solidity', 0.8593578934669495)]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 6: Get the list of all words (skills) in the vocabulary"
      ],
      "metadata": {
        "id": "pikyxKerNcI_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "all_skills = list(model.wv.index_to_key)"
      ],
      "metadata": {
        "id": "frC7Oy0V9Fr3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 7: Get the word vectors (embeddings) for each word"
      ],
      "metadata": {
        "id": "mEp_dy6aNgFt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "skill_vectors = model.wv[all_skills]"
      ],
      "metadata": {
        "id": "uhqihhCv9Q2B"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 8: Cluster the skills using KMeans"
      ],
      "metadata": {
        "id": "8hC9Q1a4Nj-O"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "n_clusters = 10  # Set the number of clusters\n",
        "kmeans = KMeans(n_clusters=n_clusters, random_state=0)\n",
        "kmeans.fit(skill_vectors)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "FcNkaAF-9TnO",
        "outputId": "0ec90daf-10cc-48c1-ddff-1dcfd799fc95"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KMeans(n_clusters=10, random_state=0)"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-1 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-1 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-1 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-1 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-1 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=10, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(n_clusters=10, random_state=0)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 9: Assign each skill to a cluster"
      ],
      "metadata": {
        "id": "0_1LbckDNml0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "skill_clusters = kmeans.labels_"
      ],
      "metadata": {
        "id": "ICO9cs3C9Wd2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 10: Create a DataFrame to view the clusters"
      ],
      "metadata": {
        "id": "a9-5BdrbNpWo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "clustered_skills = pd.DataFrame({'skill': all_skills, 'cluster': skill_clusters})\n"
      ],
      "metadata": {
        "id": "WWirhAXN9ZRV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Display the first few rows of the clustered skills"
      ],
      "metadata": {
        "id": "dKz8uvJ6Nrir"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "print(\"Clustered skills:\")\n",
        "print(clustered_skills.groupby('cluster').head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CE7RCXg09bYM",
        "outputId": "23a0df28-e742-4a7c-be28-b023c86e3a1d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Clustered skills:\n",
            "            skill  cluster\n",
            "0             sql        3\n",
            "1           excel        3\n",
            "2          python        7\n",
            "3        power_bi        3\n",
            "4         tableau        3\n",
            "5               r        3\n",
            "7      powerpoint        8\n",
            "8            word        8\n",
            "9           azure        2\n",
            "10            aws        7\n",
            "11      snowflake        2\n",
            "12          spark        7\n",
            "13         looker        7\n",
            "14             go        2\n",
            "15          scala        7\n",
            "18           jira        2\n",
            "20              c        1\n",
            "21           java        1\n",
            "25        outlook        8\n",
            "26     sharepoint        8\n",
            "29     javascript        1\n",
            "33           ssrs        8\n",
            "36         pandas        6\n",
            "37            git        5\n",
            "38          mysql        2\n",
            "40     matplotlib        9\n",
            "43     tensorflow        0\n",
            "44        pyspark        0\n",
            "45        airflow        5\n",
            "46          numpy        6\n",
            "48         matlab        4\n",
            "49     postgresql        5\n",
            "52            c++        1\n",
            "53           html        1\n",
            "54          linux        5\n",
            "56   scikit-learn        6\n",
            "57         docker        5\n",
            "58        pytorch        0\n",
            "62        jupyter        0\n",
            "70         plotly        0\n",
            "105          nuix        4\n",
            "110        twilio        4\n",
            "112     datarobot        4\n",
            "113         mxnet        4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 11: Reduce dimensionality for visualization using PCA\n",
        "## PCA reduces the 100-dimensional word vectors to 2 dimensions for visualization"
      ],
      "metadata": {
        "id": "mzsKSK07NvRv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "pca = PCA(n_components=2)\n",
        "reduced_vectors = pca.fit_transform(skill_vectors)"
      ],
      "metadata": {
        "id": "MGTKeniz9eIx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Step 11: Plot the clusters with skill labels"
      ],
      "metadata": {
        "id": "xiyo6JW2Nymp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "plt.figure(figsize=(12, 10))\n",
        "\n",
        "# Loop over the clusters and plot lines connecting each point in the cluster\n",
        "for i in range(n_clusters):\n",
        "    cluster = reduced_vectors[skill_clusters == i]\n",
        "\n",
        "    # Sort points in the cluster for a smoother line (optional)\n",
        "    cluster_sorted = cluster[np.argsort(cluster[:, 0])]\n",
        "\n",
        "    # Plot the line connecting the points in the cluster\n",
        "    plt.plot(cluster_sorted[:, 0], cluster_sorted[:, 1], label=f'Cluster {i}', marker='o')\n",
        "\n",
        "# Remove the skill labels\n",
        "# for i, skill in enumerate(all_skills):\n",
        "#     plt.text(reduced_vectors[i, 0], reduced_vectors[i, 1], skill, fontsize=8)\n",
        "\n",
        "# Customize the plot\n",
        "plt.legend()\n",
        "plt.title('Clusters of Related Skills with Line Graphs')\n",
        "plt.xlabel('PCA 1')\n",
        "plt.ylabel('PCA 2')\n",
        "plt.grid(True)\n",
        "plt.savefig('line_graph_clusters_no_labels.png')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 872
        },
        "id": "G2sA4hJb9hFB",
        "outputId": "90b08195-976f-4a12-ed02-1eeb4945ae23"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}